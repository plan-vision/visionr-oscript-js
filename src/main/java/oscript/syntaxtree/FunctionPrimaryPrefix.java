//
// Generated by JTB 1.2.1
//

package oscript.syntaxtree;

/**
 * Grammar production:
 * <PRE>

 * f0 -> "function"
 * f1 -> "("
 * f2 -> ( Arglist() )?
 * f3 -> ")"
 * f4 -> ( "extends" PrimaryExpressionWithTrailingFxnCallExpList() FunctionCallExpressionList() )?
 * f5 -> "{"
 * f6 -> Program(true)
 * f7 -> "}"
 * </PRE>
 */
public class FunctionPrimaryPrefix implements Node {
   
   
   /* Translator fields:
    */
   public static final int ANON_FXN_ID = oscript.data.Symbol.getSymbol("anon").getId();
   public int id = ANON_FXN_ID; 
    
   
   /* Cache fields:
    */
   public boolean commentParsed = false;
   public oscript.data.Value comment;
   public oscript.data.Function.FunctionData fd;
   
   
   /* Parser fields:
    */
   public boolean hasVarInScope = true;  // assume the worst
   public boolean hasFxnInScope = true;  // assume the worst
    
   
   /* Regular JTB fields:
    */
   public NodeToken f0;
   public NodeToken f1;
   public NodeOptional f2;
   public NodeToken f3;
   public NodeOptional f4;
   public NodeToken f5;
   public Program f6;
   public NodeToken f7;

   public FunctionPrimaryPrefix(NodeToken n0, NodeToken n1, NodeOptional n2, NodeToken n3, NodeOptional n4, NodeToken n5, Program n6, NodeToken n7, boolean hasVarInScope, boolean hasFxnInScope) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
      this.hasVarInScope = hasVarInScope;
      this.hasFxnInScope = hasFxnInScope;
   }

   public FunctionPrimaryPrefix(NodeOptional n0, NodeOptional n1, Program n2) {
      f0 = new NodeToken("function");
      f1 = new NodeToken("(");
      f2 = n0;
      f3 = new NodeToken(")");
      f4 = n1;
      f5 = new NodeToken("{");
      f6 = n2;
      f7 = new NodeToken("}");
   }

   public void accept(oscript.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(oscript.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

