/* Generated By:JavaCC: Do not edit this line. OscriptParserConstants.java */
package oscript.parser;

public interface OscriptParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 10;
  int FORMAL_COMMENT = 11;
  int JAVADOC_TAG_WITH_ARG = 12;
  int JAVADOC_TAG = 13;
  int JAVADOC_TAG_ARG = 14;
  int MULTI_LINE_COMMENT = 16;
  int UNIX_SELF_EXECUTABLE_COMMENT = 17;
  int BREAK = 19;
  int CALLEE = 20;
  int CATCH = 21;
  int CONST = 22;
  int CONTINUE = 23;
  int DO = 24;
  int DOTDOTDOT = 25;
  int ELSE = 26;
  int EXTENDS = 27;
  int EVAL = 28;
  int FALSE = 29;
  int FINALLY = 30;
  int FOR = 31;
  int FUNCTION = 32;
  int IF = 33;
  int INSTANCEOF = 34;
  int IMPORT = 35;
  int MIXIN = 36;
  int NEW = 37;
  int NULL = 38;
  int PRIVATE = 39;
  int PROTECTED = 40;
  int PUBLIC = 41;
  int RETURN = 42;
  int STATIC = 43;
  int SUPER = 44;
  int SYNCHRONIZED = 45;
  int THIS = 46;
  int THROW = 47;
  int TRUE = 48;
  int TRY = 49;
  int UNDEFINED = 50;
  int VAR = 51;
  int VOID = 52;
  int WHILE = 53;
  int INTEGER_LITERAL = 54;
  int DECIMAL_LITERAL = 55;
  int HEX_LITERAL = 56;
  int OCTAL_LITERAL = 57;
  int BINARY_LITERAL = 58;
  int FLOATING_POINT_LITERAL = 59;
  int EXPONENT = 60;
  int STRING_LITERAL = 61;
  int ESCAPE_SEQUENCE = 62;
  int REGEXP_LITERAL = 63;
  int REGEXP_BODY = 64;
  int REGEXP_ESCAPE_SEQUENCE = 65;
  int REGEXP_FLAG = 66;
  int IDENTIFIER = 67;
  int LETTER = 68;
  int DIGIT = 69;
  int LPAREN = 70;
  int RPAREN = 71;
  int LFXNBRACE = 72;
  int LBRACE = 73;
  int RBRACE = 74;
  int LBRACKET = 75;
  int RBRACKET = 76;
  int SEMICOLON = 77;
  int COMMA = 78;
  int DOT = 79;
  int ASSIGN = 80;
  int GT = 81;
  int LT = 82;
  int BANG = 83;
  int TILDE = 84;
  int HOOK = 85;
  int COLON = 86;
  int EQ = 87;
  int LE = 88;
  int GE = 89;
  int NE = 90;
  int SC_OR = 91;
  int SC_AND = 92;
  int INCR = 93;
  int DECR = 94;
  int PLUS = 95;
  int MINUS = 96;
  int STAR = 97;
  int SLASH = 98;
  int BIT_AND = 99;
  int BIT_OR = 100;
  int XOR = 101;
  int REM = 102;
  int LSHIFT = 103;
  int RSIGNEDSHIFT = 104;
  int RUNSIGNEDSHIFT = 105;
  int PLUSASSIGN = 106;
  int MINUSASSIGN = 107;
  int STARASSIGN = 108;
  int SLASHASSIGN = 109;
  int ANDASSIGN = 110;
  int ORASSIGN = 111;
  int XORASSIGN = 112;
  int REMASSIGN = 113;
  int LSHIFTASSIGN = 114;
  int RSIGNEDSHIFTASSIGN = 115;
  int RUNSIGNEDSHIFTASSIGN = 116;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_FORMAL_COMMENT = 2;
  int MAYBE_JAVADOC_TAG = 3;
  int EXPECTING_JAVADOC_TAG_ARG = 4;
  int IN_MULTI_LINE_COMMENT = 5;
  int IN_UNIX_SELF_EXECUTABLE_COMMENT = 6;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "\"#!\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<JAVADOC_TAG_WITH_ARG>",
    "\"return\"",
    "<JAVADOC_TAG_ARG>",
    "<token of kind 15>",
    "\"*/\"",
    "<UNIX_SELF_EXECUTABLE_COMMENT>",
    "<token of kind 18>",
    "\"break\"",
    "\"callee\"",
    "\"catch\"",
    "\"const\"",
    "\"continue\"",
    "\"do\"",
    "\"...\"",
    "\"else\"",
    "\"extends\"",
    "\"eval\"",
    "\"false\"",
    "\"finally\"",
    "\"for\"",
    "\"function\"",
    "\"if\"",
    "\"instanceof\"",
    "\"import\"",
    "\"mixin\"",
    "\"new\"",
    "\"null\"",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"return\"",
    "\"static\"",
    "\"super\"",
    "\"synchronized\"",
    "\"this\"",
    "\"throw\"",
    "\"true\"",
    "\"try\"",
    "\"undefined\"",
    "\"var\"",
    "\"void\"",
    "\"while\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<BINARY_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<ESCAPE_SEQUENCE>",
    "<REGEXP_LITERAL>",
    "<REGEXP_BODY>",
    "<REGEXP_ESCAPE_SEQUENCE>",
    "<REGEXP_FLAG>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"\\\'{\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "\"..\"",
  };

}
